# Heat template which intstantiates an A side Perimeta SBC instance with
# 4 vNICs. 
#
# This is designed to be included in a higher level template.
#
# This template puts the Perimeta configuration in place using userdata
# injected via OpenStack's ConfigDrive mechanism.
#
# Host anti-affinity is achieved using different availability zones for
# the Perimeta instance or server group anti-affinity if they are in the
# same availability zone.
#
# Template requires Juno or above and has been tested on Kilo.
#
heat_template_version: 2014-10-16

description: >
  HOT template to instantiate an A side Perimeta SBC instance with 4 vNICs as part of a nested template

parameters:
  vnf_name:
    type: string
    description: Unique name for this VNF instance
  vnf_id:
    type: string
    description: VNF ID of this deployment
  vm_role:
    type: string
    description: Role of these VMs
  vf_module_id:
    type: string
    description: Unique ID for this VF Module instance
  sbc_a_name_0:
    type: string
    description: Name of Perimeta VM A instance 
  perimeta_image_name:
    type: string
    description: Glance image for Perimeta instance
  perimeta_flavor_name:
    type: string
    description: Flavor to use for creating VM instances
  perimeta_keypair:
    type: string
    description: Keypair to use for accessing this Perimeta instance
  availability_zone_0:
    # Can be commented out along with references if always using a single availability zone
    type: string
    description: Availability zone for A instances.
  mgmt_net_id:
    type: string
    description: Management network id
  sbc_mgmt_vip_0:
    type: string
    description: Management virtual IP address.
  sbc_a_mgmt_ip_0:
    type: string
    description: Fixed IP address to use as management IP of A instance.
  int_ha_net_id:
    type: string
    description: HA network id
  int_ha_network_plen:
  # Constraint copied from base module 
    type: number
    description: Prefix length of subnet associated with internal HA network 
    constraints:
    - range: { min: 0, max: 31 }
      description: int_ha_network_plen must be between 0 and 31
  sbc_a_int_ha_ip_0:
    type: string
    description: Fixed IP address to use as HA IP of A instance.
  sbc_b_int_ha_ip_0:
    type: string
    description: Fixed IP address to use as HA IPs of B instance.
  sig_net_id:
    type: string
    description: sig/core network UUID
  sig_subnet_id:
    type: string
    description: sig/core IPv4 subnetwork UUID
  sbc_sig_v6_vip_0:
    type: string
    description: sig/core alternate virtual IP address
  sbc_a_sig_ip_0:
    type: string
    description: Fixed IPv4 address to use as sig/core alternate fixed IPs of A instance.
  sbc_a_sig_v6_ip_0:
    type: string
    description: Fixed IPv6 address to use as sig/core alternate fixed IPs of A instance.
  perimeta_sec_groups:
    type: comma_delimited_list
    description: List of security groups to add on trusted interfaces.
  media_net_id:
    type: string
    description: media/access network UUID
  sbc_media_v6_vip_0:
    type: string
    description: media/access alternate virtual IP address
  sbc_a_media_ip_0:
    type: string
    description: Fixed IPv4 address to use as media/access alternate fixed IP of A instance.
  sbc_a_media_v6_ip_0:
    type: string
    description: Fixed IPv6 address to use as media/access alternate fixed IP of A instance.
  perimeta_server_group:
    type: string
    description: Server group to use for these VMs
  perimeta_config:
    type: string
    description: JSON orchestration template configuration for instance.

resources:
  # Perimeta management ports
  perimeta_sbc_a_mgmt_0_port:
    type: OS::Neutron::Port
    properties:
      name:
        str_replace:
          template: $VNF_NAME_$VM_mgmt_0_port
          params:
            $VNF_NAME : { get_param: vnf_name }               
            $VM: { get_param: sbc_a_name_0 }
      network: { get_param: mgmt_net_id }
      fixed_ips:
        - ip_address: { get_param: sbc_a_mgmt_ip_0 }
      security_groups: { get_param: perimeta_sec_groups }
      allowed_address_pairs:
        - ip_address: { get_param: sbc_mgmt_vip_0 }

  # Perimeta HA ports
  perimeta_sbc_a_ha_0_port:
    type: OS::Neutron::Port
    properties:
      name:
        str_replace:
          template: $VNF_NAME_$VM_ha_port
          params:
            $VNF_NAME : { get_param: vnf_name }               
            $VM: { get_param: sbc_a_name_0 }
      network: { get_param: int_ha_net_id }
      fixed_ips:
        - ip_address: { get_param: sbc_a_int_ha_ip_0 }
      security_groups: { get_param: perimeta_sec_groups }

  # Perimeta sig/core service network ports
  #
  # Dual stack core network 
  # - if only IPv4 required comment out second entry in fixed_ips and allowed_addess_pairs parameters.
  # - if only IPv6 required comment out first entry in fixed_ips and allowed_addess_pairs parameters.
  perimeta_sbc_a_sig_0_port:
    type: OS::Neutron::Port
    properties:
      name:
        str_replace:
          template: $VNF_NAME_$VM_sig_port
          params:
            $VNF_NAME : { get_param: vnf_name }               
            $VM: { get_param: sbc_a_name_0 }
      network: { get_param: sig_net_id }
      fixed_ips:
        - subnet_id: { get_param: sig_subnet_id }
        - ip_address: { get_param: sbc_a_sig_ip_0 }
        - ip_address: { get_param: sbc_a_sig_v6_ip_0 }
      security_groups: { get_param: perimeta_sec_groups }
      allowed_address_pairs:
        - ip_address: { get_param: sbc_sig_v6_vip_0 }

  # Perimeta media/access service network ports
  # Dual stack access network 
  # - if only IPv4 required comment out second entry in fixed_ips and allowed_addess_pairs parameters.
  # - if only IPv6 required comment out first entry in fixed_ips and allowed_addess_pairs parameters.
  perimeta_sbc_a_media_0_port:
    type: OS::Neutron::Port
    properties:
      name:
        str_replace:
          template: $VNF_NAME_$VM_media_port
          params:
            $VNF_NAME : { get_param: vnf_name }               
            $VM: { get_param: sbc_a_name_0 }
      network: { get_param: media_net_id }
      fixed_ips:
        - ip_address: { get_param: sbc_a_media_ip_0 }
        - ip_address: { get_param: sbc_a_media_v6_ip_0 }
      security_groups: { get_param: perimeta_sec_groups }
      allowed_address_pairs:
        - ip_address: { get_param: sbc_media_v6_vip_0 }

  # Add any additional service ports here.

  perimeta_sbc_a_server_0:
    type: OS::Nova::Server
    properties:
      name: { get_param: sbc_a_name_0 }
      image: { get_param: perimeta_image_name }
      flavor: { get_param: perimeta_flavor_name }
      key_name: { get_param: perimeta_keypair }
      scheduler_hints: { group: { get_param: perimeta_server_group } }
      metadata:
        'vnf_name': { get_param: vnf_name }
        'vnf_id': { get_param: vnf_id }
        'vm_role':
            str_replace:
              template: $ROLE_a
              params:
                $ROLE: { get_param: vm_role }
        'vf_module_id': { get_param: vf_module_id }
        'msw_template_version': '17.07.04 - 2017-09-01'
      personality:
        '/opt/MetaSwitch/init/custom.ini': { get_file: custom.ini }
      networks:
        - port: { get_resource: perimeta_sbc_a_mgmt_0_port }
        - port: { get_resource: perimeta_sbc_a_ha_0_port }
        - port: { get_resource: perimeta_sbc_a_sig_0_port }
        - port: { get_resource: perimeta_sbc_a_media_0_port }
      availability_zone: { get_param: availability_zone_0 }
      config_drive: True
      user_data_format: RAW
      user_data:
        str_replace:
          template: { get_param: perimeta_config }
          params:
            $MGMT_MACADDR: { get_attr: [perimeta_sbc_a_mgmt_0_port, mac_address] }
            $HA_MACADDR: { get_attr: [perimeta_sbc_a_ha_0_port, mac_address] }
            $SIG_MACADDR: { get_attr: [perimeta_sbc_a_sig_0_port, mac_address] }
            $MEDIA_MACADDR: { get_attr: [perimeta_sbc_a_media_0_port, mac_address] }
            $LOCAL_HA_IP_ADDR: { get_param: sbc_a_int_ha_ip_0 }
            $REMOTE_HA_IP_ADDR: { get_param: sbc_b_int_ha_ip_0 }
            $HA_NETWORK_PLEN: { get_param: int_ha_network_plen }