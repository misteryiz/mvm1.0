# Heat template which instantiates base resources for a Perimeta deployment,
# namely.
#  - keypair
#  - security group
#  - SBC server group
#  - Internal HA network
#
#  Template version 17.07.05 - 2017-12-08
#
#
heat_template_version: 2014-10-16

description: >
  HOT template to instantiate base shared resources for a Perimeta deployment

parameters:
  vnf_name:
    type: string
    description: Unique name for this VNF instance
  perimeta_ssh_key:
    type: string
    description: SSH public key
  # Deployment scaling parameters
  # Internal high availability network parameters
  perimeta_int_ha_net_prefix_v4:
    type: string
    description: IPv4 subnet prefix for internal HA network
  perimeta_int_ha_net_prefix_len_v4:
    type: number
    description: Prefix length of subnet associated with internal HA network
    constraints:
    - range: { min: 0, max: 31 }
      description: int_ha_net_plen must be between 0 and 31

  # Management virtual IPv4 address - needed by DCAE 
  sbc_mgmt_floating_ip:
    type: string
    description: Management virtual IP address

resources:
  # Resource Security Group
  shared_perimeta_rsg:
    type: OS::Neutron::SecurityGroup
    properties:
      description: Security Group for Perimeta networks
      name:
        str_replace:
            template:  $VNF_NAME_shared_perimeta_RSG
            params:
              $VNF_NAME:  { get_param: vnf_name }
      rules:
        - {"direction": "egress", "remote_ip_prefix": "0.0.0.0/0", "protocol": "tcp", "ethertype": "IPv4", "port_range_max": 65535, "port_range_min": 1}
        - {"direction": "egress", "remote_ip_prefix": "0.0.0.0/0", "protocol": "udp", "ethertype": "IPv4", "port_range_max": 65535, "port_range_min": 1}
        - {"direction": "egress", "remote_ip_prefix": "0.0.0.0/0", "protocol": "icmp", "ethertype": "IPv4"}
        - {"direction": "egress", "remote_ip_prefix": "::/0", "protocol": "icmp", "ethertype": "IPv6"}
        - {"direction": "egress", "remote_ip_prefix": "::/0", "protocol": "tcp", "ethertype": "IPv6", "port_range_max": 65535, "port_range_min": 1}
        - {"direction": "egress", "remote_ip_prefix": "::/0", "protocol": "udp", "ethertype": "IPv6", "port_range_max": 65535, "port_range_min": 1}
        - {"direction": "ingress", "remote_ip_prefix": "0.0.0.0/0", "protocol": "tcp", "ethertype": "IPv4", "port_range_max": 65535, "port_range_min": 1}
        - {"direction": "ingress", "remote_ip_prefix": "0.0.0.0/0", "protocol": "udp", "ethertype": "IPv4", "port_range_max": 65535, "port_range_min": 1}
        - {"direction": "ingress", "remote_ip_prefix": "0.0.0.0/0", "protocol": "icmp", "ethertype": "IPv4"}
        - {"direction": "ingress", "remote_ip_prefix": "::/0", "protocol": "icmp", "ethertype": "IPv6"}
        - {"direction": "ingress", "remote_ip_prefix": "::/0", "protocol": "tcp", "ethertype": "IPv6", "port_range_max": 65535, "port_range_min": 1}
        - {"direction": "ingress", "remote_ip_prefix": "::/0", "protocol": "udp", "ethertype": "IPv6", "port_range_max": 65535, "port_range_min": 1}
        # explicitly permit ipv6 icmp traffic to workaround contrail bug
        - {"direction": "ingress", "remote_ip_prefix": "::/0", "protocol": "58", "ethertype": "IPv6"}
        - {"direction": "egress", "remote_ip_prefix": "::/0", "protocol": "58", "ethertype": "IPv6"}	

  # Keypair for use by Perimeta instances.
  shared_perimeta_keypair:
    type: OS::Nova::KeyPair
    properties:
      name:
        str_replace:
          template: $VNF_NAME_key_pair
          params:
            $VNF_NAME: { get_param: vnf_name }
      public_key: {get_param: perimeta_ssh_key}
      save_private_key: false

  # Create the server groups. We need one per pair of perimeta VFs in the site
  # We only have one SBC
  shared_perimeta_sbc_server_gp:
    type: OS::Nova::ServerGroup
    properties:
      name:
        str_replace:
            template:  $VNF_NAME_shared_sbc_RSG_name_0
            params:
              $VNF_NAME:  { get_param: vnf_name }
      policies: ['anti-affinity']




  # Internal HA network for deployment.
  #   This is a private network with all instances on the same isolated L2
  #   L2 subnet.  There is no requirement for routing in an IP sense which 
  #   means that there is no need for a default gateway  
  perimeta_internal_ha_ipam_net_0:
    type: OS::ContrailV2::NetworkIpam
    properties:
      name:
        str_replace:
          template: $VF_NAME_int_ha_ipam_net_0
          params:
            $VF_NAME: { get_param: vnf_name }

  shared_perimeta_internal_ha_net_0:
    type: OS::ContrailV2::VirtualNetwork
    depends_on: [ perimeta_internal_ha_ipam_net_0 ]
    properties:
      name:
        str_replace:
          template: $VF_NAME_int_ha_net_0
          params:
            $VF_NAME: { get_param: vnf_name }
      virtual_network_properties:
        virtual_network_properties_rpf: enable
      is_shared: false
      flood_unknown_unicast: true
      network_ipam_refs:
        - get_resource: perimeta_internal_ha_ipam_net_0
      network_ipam_refs_data:
        - network_ipam_refs_data_ipam_subnets:
            - network_ipam_refs_data_ipam_subnets_subnet:
                network_ipam_refs_data_ipam_subnets_subnet_ip_prefix: { get_param: perimeta_int_ha_net_prefix_v4 }
                network_ipam_refs_data_ipam_subnets_subnet_ip_prefix_len: { get_param: perimeta_int_ha_net_prefix_len_v4 }
              network_ipam_refs_data_ipam_subnets_enable_dhcp: false



outputs:
  shared_perimeta_sbc_server_group:
    description: Perimeta SBC Server group
    value: { get_resource: shared_perimeta_sbc_server_gp}

  shared_perimeta_keypair:
    description: SSH keypair for deployment
    value: { get_resource: shared_perimeta_keypair }

  shared_perimeta_sec_groups:
    description: List of security groups to use for all network interfaces
    value: { get_resource: shared_perimeta_rsg }

  shared_int_ha_net_id:
    description: HA internal network for deployment
    value: { get_resource: shared_perimeta_internal_ha_net_0 }

  shared_int_ha_net_prefix_len_v4:
    description: HA internal network IPv4 prefix length
    value: { get_param: perimeta_int_ha_net_prefix_len_v4 }


  oam_management_v4_address:
    description: Management virtual IP address
    value: { get_param: sbc_mgmt_floating_ip }

